/**
 * This file was generated by bin2cpp v3.0.0
 * Copyright (C) 2013-2024 end2endzone.com. All rights reserved.
 * bin2cpp is open source software, see http://github.com/end2endzone/bin2cpp
 * Source code for file 'diag-report.css', last modified 1720370695.
 * Do not modify this file.
 */
#if defined(_WIN32) && !defined(_CRT_SECURE_NO_WARNINGS)
#define _CRT_SECURE_NO_WARNINGS
#endif
#include "diag-report.h"
#include <string> //for std::string
#include <iostream>
#include <fstream>  //for ofstream
namespace bin2cpp
{
  class DiagreportCssFile : public virtual bin2cpp::File
  {
  public:
    DiagreportCssFile() { build(); }
    virtual ~DiagreportCssFile() {}
    virtual size_t getSize() const { return 3446; }
    virtual const char * getFileName() const { return &getFilePath()[0]; }
    virtual const char * getFilePath() const { return "diag-report.css"; }
    virtual const char * getBuffer() const { return mBuffer.c_str(); }
    void build()
    {
      mBuffer.clear();
      mBuffer.reserve(getSize()); //allocate all required memory at once to prevent reallocations
      mBuffer.append("html {\r\n  margin: 1em 2em;\r\n}\r\nh1 {\r\n  font-size: 2.5em;\r\n}\r\nh2 {\r\n  font-size: 2em;\r\n}\r\nh3 {\r\n  font-size: 1.75em;\r\n}\r\nh4 {\r\n  font-size: 1.5em;\r\n}\r\nh5 {\r\n  font-size: 1.35em;\r\n}\r\nh6 {\r\n  font-size: ", 200);
      mBuffer.append("1.25em;\r\n}\r\nh2 {\r\n  margin-top: 4em;\r\n  border-top: 1px solid grey;\r\n  padding-top: 1em;\r\n}\r\nimg {\r\n  border: solid #b0cfff .5em;\r\n  /* max-width: 70em; */\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  ", 200);
      mBuffer.append("margin-left: auto;\r\n  margin-right: auto;\r\n  display: block;\r\n}\r\nfigcaption {\r\n  background-color: #325180;\r\n  color: #fff;\r\n  font-style: italic;\r\n  padding: .2em;\r\n  text-align: center;\r\n}\r\nfigure {", 200);
      mBuffer.append("\r\n  /* max-width: 70em; */\r\n  margin-left: 0;\r\n  background-color: #c5d5ed;\r\n}\r\nblockquote {\r\n  margin-left: 2em;\r\n  margin-right: 2em;\r\n  padding: 0.25em 4em;\r\n  border: solid 4px #b0cfff;\r\n  backgro", 200);
      mBuffer.append("und-color: #ebf3ff;\r\n  max-width: 66em;\r\n}\r\nem {\r\n  background-color: #f7ffeb;\r\n}\r\ntable {\r\n  border: solid 2px black;\r\n  text-align: left;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  text-align: le", 200);
      mBuffer.append("ft;\r\n  border: solid 1px grey;\r\n  padding: 0.1em 0.5em;\r\n  border-left: none;\r\n  border-top: none;\r\n}\r\ntable tr:nth-child(odd) {\r\n  background: #eeeff0;\r\n}\r\ntable th:last-child, table td:last-child {\r", 200);
      mBuffer.append("\n  border-right: none;\r\n}\r\ntable tr:last-child th, table tr:last-child td {\r\n  border-bottom: none;\r\n}\r\ncode {\r\n  padding-left: 0.25em;\r\n  padding-right: 0.25em;\r\n  background-color: #daffdd;\r\n}\r\ntabl", 200);
      mBuffer.append("e.leaders {\r\n  border: solid 2px #b5c8e6;\r\n  text-align: left;\r\n  border-collapse: collapse;\r\n\twidth: auto;\r\n  min-width: 64em;\r\n\tmargin: .5em auto .5em 0;\r\n\ttable-layout: fixed;\r\n}\r\ntable.leaders th,", 200);
      mBuffer.append(" table.leaders td {\r\n  text-align: left;\r\n  border: none;\r\n  border-left: none;\r\n  border-top: none;\r\n  white-space: nowrap;\r\n  padding: .1em .5em;\r\n  width: auto;\r\n  vertical-align: bottom;\r\n}\r\ntable", 200);
      mBuffer.append(".leaders tr:nth-child(odd) {\r\n  background: #f8fcff;\r\n}\r\ntable.leaders th:last-child, table.leaders  td:last-child {\r\n  border-right: none;\r\n  white-space: break-spaces;\r\n  text-align  left;\r\n  paddin", 200);
      mBuffer.append("g-left: .5em;\r\n}\r\ntable.leaders th:nth-child(2), table.leaders  td:nth-child(2) {\r\n  border-right: none;\r\n  white-space: break-spaces;\r\n  text-align  left;\r\n  padding-left: .5em;\r\n  width: 11.5em;\r\n}\r", 200);
      mBuffer.append("\ntable.leaders  tr:last-child th, table.leaders  tr:last-child td {\r\n  border-bottom: none;\r\n  width: auto;\r\n  max-width: 60%;\r\n}\r\ntable.leaders td:first-child {\r\n  text-align: left;\r\n  overflow: hidd", 200);
      mBuffer.append("en;\r\n  position: relative;\r\n  padding-right: 2em;\r\n}\r\ntable.leaders td:first-child::after {\r\n  content: \'\';\r\n  position: absolute;\r\n  bottom: calc(.2em + 2px);\r\n  width: 100%;\r\n  margin-left: .5em;\r\n ", 200);
      mBuffer.append(" border-bottom: 2px dotted grey;\r\n}\r\ntd.timing-value {\r\n  text-align: right;\r\n}\r\np.timing-info::before {\r\n  content: \'\342\217\261\357\270\217\360\237\217\203\';\r\n  margin-right: 1em;\r\n  margin-left: 1em;\r\n}\r\np.timing-info {\r\n  bor", 200);
      mBuffer.append("der: solid 1px #00ff68;\r\n  padding: .5em;\r\n  background-color: #effff5;\r\n  margin: 1em 2em;\r\n  max-width: 96em;\r\n}\r\np.error-message {\r\n  background-color: #fff0f0;\r\n  padding: 0.5em;\r\n  border: solid ", 200);
      mBuffer.append("3px red;\r\n  margin: 1em;\r\n  max-width: 96em;\r\n}\r\np.warning-message {\r\n  background-color: #fff9f1;\r\n  padding: 0.5em;\r\n  border: solid 2px #ff9000;\r\n  margin: 0.5em 1em;\r\n  max-width: 96em;\r\n}\r\nsectio", 200);
      mBuffer.append("n.image-display {\r\n\tborder:  solid 1px grey;\r\n    padding: 1em 2em;\r\n\tbackground-color: #f6f6f6;\r\n\tmargin: 1em;\r\n\tmax-width: 100em;\r\n}\r\nsection.image-display h6 {\r\n    font-size: 1.08em;\r\n    margin-t", 200);
      mBuffer.append("op:  1em;\r\n}\r\nsection.image-display p {\r\n}\r\n\r\n", 46);
    }
    virtual bool save(const char * filename) const
    {
      std::ofstream f(filename, std::ios::out | std::ios::binary | std::ios::trunc);
      if (f.fail()) return false;
      size_t fileSize = getSize();
      const char * buffer = getBuffer();
      f.write(buffer, fileSize);
      f.close();
      return true;
    }
  private:
    std::string mBuffer;
  };
  const File & getDiagreportCssFile() { static DiagreportCssFile _instance; return _instance; }
  typedef const File & (*t_func)();
  extern bool RegisterFile(t_func iFunctionPointer);
  static bool kDiagreportCssFileRegistered = bin2cpp::RegisterFile(&getDiagreportCssFile);
}; //bin2cpp
